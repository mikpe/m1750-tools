/*
 * m1750-coff/include/stdio.h
 *
 * ANSI Standard C: 7.9 Input/ouput
 *
 * Copyright (c) 1996, Chris Nettleton Software
 *
 * The authors hereby grant permission to use, copy, modify, distribute,
 * and license this software and its documentation for any purpose,
 * provided that existing copyright notices are retained in all copies
 * and that this notice is included verbatim in any distributions. No
 * written agreement, license, or royalty fee is required for any of the
 * authorized uses. Modifications to this software may be copyrighted by
 * their authors and need not follow the licensing terms described here,
 * provided that the new terms are clearly indicated on the first page
 * of each file where they apply.
 *
 * $Log: stdio.h,v $
 * Revision 1.3  1997/07/17 19:02:14  nettleto
 * Changed new to newfile, to avoid C++ problem.
 *
 * Revision 1.2  1997/05/09 17:37:47  nettleto
 * *** empty log message ***
 *
 * Revision 1.1  1997/05/09 17:31:46  nettleto
 * Initial revision
 *
 */

#ifndef _STDIO_H_
#define _STDIO_H_

#include <sys/cdefs.h>

__BEGIN_DECLS

#include <stdarg.h>

#ifndef _SIZE_T_
#define _SIZE_T_
typedef unsigned int size_t;
#endif

typedef struct __sFILE FILE;

typedef long int fpos_t;

#ifndef NULL
#ifdef __cplusplus
#define NULL    0
#else
#define NULL    ((void *) 0)
#endif
#endif

#define _IOFBF  0    /* setvbuf should set fully buffered */
#define _IOLBF  1    /* setvbuf should set line buffered */
#define _IONBF  2    /* setvbuf should set unbuffered */

/*
 * Size of the buffer used by the setbuf function
 */
#define BUFSIZ  1024

/*
 * Negative value to indicate end-of-file
 */
#define EOF  (-1)

#define FOPEN_MAX  20
#define FILENAME_MAX  1024
#define L_tmpnam  1024

#ifndef SEEK_CUR
#define SEEK_CUR  1  /* set file offset to current plus offset */
#endif
#ifndef SEEK_END
#define SEEK_END  2  /* set file offset to EOF plus offset */
#endif
#ifndef SEEK_SET
#define SEEK_SET  0  /* set file offset to offset */
#endif

/* 
 * Max number of unique file names generated by the tmpnam function
 */
#define TMP_MAX  26

/*
 * 'pointer to FILE' objects for standard files
 */
#define stdin  (&__sf [0])
#define stdout (&__sf [1])
#define stderr (&__sf [2])


/* 7.9.4.1 */
int 
remove (const char *filename);

/* 7.9.4.2 */
int 
rename (const char *oldname, const char *newname);

/* 7.9.4.3 */
FILE *
tmpfile (void);

/* 7.9.4.4 */
char *
tmpnam (char *s);

/* 7.9.5.1 */
int 
fclose (FILE *stream);

/* 7.9.5.2 */
int 
fflush (FILE *stream);

/* 7.9.5.3 */
FILE *
fopen (const char *filename, const char *mode);

/* 7.9.5.4 */
FILE *
freopen (const char *filename, const char *mode, FILE *stream);

/* 7.9.5.5 */
void 
setbuf (FILE *stream, char *buf);

/* 7.9.5.6 */
int 
setvbuf (FILE *stream, char *buf, int mode, size_t size);

/* 7.9.6.1 */
int 
fprintf (FILE *stream, const char *format, ...);

/* 7.9.6.2 */
int 
fscanf (FILE *stream, const char *format, ...);

/* 7.9.6.3 */
int 
printf (const char *format, ...);

/* 7.9.6.4 */
int 
scanf (const char *format, ...);

/* 7.9.6.5 */
int 
sprintf (char *s, const char *format, ...);

/* 7.9.6.6 */
int 
sscanf (const char *s, const char *format, ...);

/* 7.9.6.7 */
int 
vfprintf (FILE *stream, const char *format, va_list arg);

/* 7.9.6.8 */
int 
vprintf (const char *format, va_list arg);

/* 7.9.6.9 */
int 
vsprintf (char *s, const char *format, va_list arg);

/* 7.9.7.1 */
int 
fgetc (FILE *stream);

/* 7.9.7.2 */
char *
fgets (char *s, int n, FILE *stream);

/* 7.9.7.3 */
int 
fputc (int c, FILE *stream);

/* 7.9.7.4 */
int 
fputs (const char *s, FILE *stream);

/* 7.9.7.5 */
int 
getc (FILE *stream);

/* 7.9.7.6 */
int 
getchar (void);

/* 7.9.7.7 */
char *
gets (char *s);

/* 7.9.7.8 */
int 
putc (int c, FILE *stream);

/* 7.9.7.9 */
int 
putchar (int c);

/* 7.9.7.10 */
int 
puts (const char *s);

/* 7.9.7.11 */
int 
ungetc (int c, FILE *stream);

/* 7.9.8.1 */
size_t 
fread (void *ptr, size_t size, size_t nmemb, FILE *stream);

/* 7.9.8.2 */
size_t 
fwrite (const void *ptr, size_t size, size_t nmemb, FILE *stream);

/* 7.9.9.1 */
int 
fgetpos (FILE *stream, fpos_t *pos);

/* 7.9.9.2 */
int 
fseek (FILE *stream, long offset, int whence);

/* 7.9.9.3 */
int 
fsetpos (FILE *stream, const fpos_t *pos);

/* 7.9.9.4 */
long 
ftell (FILE *stream);

/* 7.9.9.5 */
void 
rewind (FILE *stream);

/* 7.9.10.1 */
void 
clearerr (FILE *stream);

/* 7.9.10.2 */
int 
feof (FILE *stream);

/* 7.9.10.3 */
int 
ferror (FILE *stream);

/* 7.9.10.4 */
void 
perror (const char *s);

#define feof(p)  __sfeof(p)
#define ferror(p) __sferror(p)
/* #define clearerr(p) __sclearerr(p) */

#define getc(fp)  __sgetc(fp)
#define putc(x, fp)  __sputc(x, fp)

#define getchar()  getc(stdin)
#define putchar(x)  putc(x, stdout)

__END_DECLS

#endif /* not _STDIO_H_ */

